unit CPRSCDSHooksAdapterImpl;

{$WARN SYMBOL_PLATFORM OFF}

interface

uses
  ComObj, Classes, ActiveX, CPRSCDSHooksAdapter_TLB, StdVcl, Dialogs, CPRSChart_TLB;

type
  TCPRSCDSHooksAdapterCoClass = class(TAutoObject, ICPRSCDSHooksAdapterCoClass, ICPRSExtension)
  protected
    function Execute(const CPRSBroker: ICPRSBroker; const CPRSState: ICPRSState; const Param1,
          Param2, Param3: WideString; var Data1, Data2: WideString): WordBool;
          safecall;
  public
    procedure Initialize; override;
    destructor Destroy; override;
  end;

implementation

uses ComServ, IdBaseComponent, IdComponent, SysUtils,
  IdTCPConnection, IdTCPClient, IdHTTP;

var
    httpClient: TIdHTTP;

procedure TCPRSCDSHooksAdapterCoClass.Initialize;
begin
  inherited;
  httpClient := TIdHTTP.Create();
end;

destructor TCPRSCDSHooksAdapterCoClass.Destroy;
begin
  inherited;
  httpClient.Free;
end;

function TCPRSCDSHooksAdapterCoClass.Execute(const CPRSBroker: ICPRSBroker; const CPRSState: ICPRSState;
          const Param1, Param2, Param3: WideString; var Data1,
          Data2: WideString): WordBool;
var
  data: TStringList;
begin
  try
    data := TStringList.Create;
    data.Delimiter := #10;
    data.AddPair('param1', Param1);
    data.AddPair('param2', Param2);
    data.AddPair('param3', Param3);
    data.AddPair('handle', CPRSState.Handle);
    data.AddPair('userid', CPRSState.UserDUZ);
    data.AddPair('username', CPRSState.UserName);
    data.AddPair('patientid', CPRSState.PatientDFN);
    data.AddPair('patientname', CPRSState.PatientName);
    data.AddPair('patientdob', CPRSState.PatientDOB);
    data.AddPair('locationid', IntToStr(CPRSState.LocationIEN));
    data.AddPair('locationname', CPRSState.LocationName);
    ShowMessage('Sending:' + #13 + data.GetText);
    httpClient.Post('http://localhost:8080/cdshooks-demo/cdshooks-proxy', data);
  except
    On e:Exception do begin
      ShowMessage('Error: ' + e.Message);
    end;
  end;
end;

initialization
  TAutoObjectFactory.Create(ComServer, TCPRSCDSHooksAdapterCoClass, Class_CPRSCDSHooksAdapterCoClass,
    ciMultiInstance, tmApartment);
end.
